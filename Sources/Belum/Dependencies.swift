// Auto-Generated by generate.swift
// Do not modify
// 
extension Belum.Registrar {
    public func register<U, D1>(
        _ value: @escaping (Dependencies1<Members, D1>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>)
    {
        let deps: Dependencies1<Members, D1> = Dependencies1(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2>(
        _ value: @escaping (Dependencies2<Members, D1, D2>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>)
    {
        let deps: Dependencies2<Members, D1, D2> = Dependencies2(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3>(
        _ value: @escaping (Dependencies3<Members, D1, D2, D3>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>)
    {
        let deps: Dependencies3<Members, D1, D2, D3> = Dependencies3(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4>(
        _ value: @escaping (Dependencies4<Members, D1, D2, D3, D4>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>)
    {
        let deps: Dependencies4<Members, D1, D2, D3, D4> = Dependencies4(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5>(
        _ value: @escaping (Dependencies5<Members, D1, D2, D3, D4, D5>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>)
    {
        let deps: Dependencies5<Members, D1, D2, D3, D4, D5> = Dependencies5(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6>(
        _ value: @escaping (Dependencies6<Members, D1, D2, D3, D4, D5, D6>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>)
    {
        let deps: Dependencies6<Members, D1, D2, D3, D4, D5, D6> = Dependencies6(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7>(
        _ value: @escaping (Dependencies7<Members, D1, D2, D3, D4, D5, D6, D7>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>)
    {
        let deps: Dependencies7<Members, D1, D2, D3, D4, D5, D6, D7> = Dependencies7(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8>(
        _ value: @escaping (Dependencies8<Members, D1, D2, D3, D4, D5, D6, D7, D8>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>)
    {
        let deps: Dependencies8<Members, D1, D2, D3, D4, D5, D6, D7, D8> = Dependencies8(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9>(
        _ value: @escaping (Dependencies9<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>)
    {
        let deps: Dependencies9<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9> = Dependencies9(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10>(
        _ value: @escaping (Dependencies10<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>)
    {
        let deps: Dependencies10<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10> = Dependencies10(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11>(
        _ value: @escaping (Dependencies11<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>)
    {
        let deps: Dependencies11<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11> = Dependencies11(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12>(
        _ value: @escaping (Dependencies12<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>)
    {
        let deps: Dependencies12<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12> = Dependencies12(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13>(
        _ value: @escaping (Dependencies13<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>)
    {
        let deps: Dependencies13<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13> = Dependencies13(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14>(
        _ value: @escaping (Dependencies14<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>)
    {
        let deps: Dependencies14<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14> = Dependencies14(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15>(
        _ value: @escaping (Dependencies15<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>)
    {
        let deps: Dependencies15<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15> = Dependencies15(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16>(
        _ value: @escaping (Dependencies16<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>)
    {
        let deps: Dependencies16<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16> = Dependencies16(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17>(
        _ value: @escaping (Dependencies17<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>)
    {
        let deps: Dependencies17<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17> = Dependencies17(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18>(
        _ value: @escaping (Dependencies18<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>)
    {
        let deps: Dependencies18<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18> = Dependencies18(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19>(
        _ value: @escaping (Dependencies19<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>)
    {
        let deps: Dependencies19<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19> = Dependencies19(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20>(
        _ value: @escaping (Dependencies20<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>)
    {
        let deps: Dependencies20<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20> = Dependencies20(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21>(
        _ value: @escaping (Dependencies21<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>)
    {
        let deps: Dependencies21<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21> = Dependencies21(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22>(
        _ value: @escaping (Dependencies22<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>)
    {
        let deps: Dependencies22<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22> = Dependencies22(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23>(
        _ value: @escaping (Dependencies23<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>)
    {
        let deps: Dependencies23<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23> = Dependencies23(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24>(
        _ value: @escaping (Dependencies24<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>)
    {
        let deps: Dependencies24<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24> = Dependencies24(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25>(
        _ value: @escaping (Dependencies25<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>)
    {
        let deps: Dependencies25<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25> = Dependencies25(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26>(
        _ value: @escaping (Dependencies26<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>)
    {
        let deps: Dependencies26<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26> = Dependencies26(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27>(
        _ value: @escaping (Dependencies27<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>)
    {
        let deps: Dependencies27<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27> = Dependencies27(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28>(
        _ value: @escaping (Dependencies28<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>)
    {
        let deps: Dependencies28<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28> = Dependencies28(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29>(
        _ value: @escaping (Dependencies29<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>)
    {
        let deps: Dependencies29<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29> = Dependencies29(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30>(
        _ value: @escaping (Dependencies30<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>)
    {
        let deps: Dependencies30<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30> = Dependencies30(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31>(
        _ value: @escaping (Dependencies31<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>)
    {
        let deps: Dependencies31<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31> = Dependencies31(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32>(
        _ value: @escaping (Dependencies32<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>)
    {
        let deps: Dependencies32<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32> = Dependencies32(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33>(
        _ value: @escaping (Dependencies33<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>)
    {
        let deps: Dependencies33<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33> = Dependencies33(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34>(
        _ value: @escaping (Dependencies34<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>)
    {
        let deps: Dependencies34<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34> = Dependencies34(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35>(
        _ value: @escaping (Dependencies35<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>)
    {
        let deps: Dependencies35<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35> = Dependencies35(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36>(
        _ value: @escaping (Dependencies36<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>)
    {
        let deps: Dependencies36<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36> = Dependencies36(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37>(
        _ value: @escaping (Dependencies37<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>)
    {
        let deps: Dependencies37<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37> = Dependencies37(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38>(
        _ value: @escaping (Dependencies38<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>)
    {
        let deps: Dependencies38<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38> = Dependencies38(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39>(
        _ value: @escaping (Dependencies39<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>)
    {
        let deps: Dependencies39<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39> = Dependencies39(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40>(
        _ value: @escaping (Dependencies40<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>)
    {
        let deps: Dependencies40<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40> = Dependencies40(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41>(
        _ value: @escaping (Dependencies41<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>)
    {
        let deps: Dependencies41<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41> = Dependencies41(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42>(
        _ value: @escaping (Dependencies42<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>)
    {
        let deps: Dependencies42<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42> = Dependencies42(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43>(
        _ value: @escaping (Dependencies43<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>)
    {
        let deps: Dependencies43<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43> = Dependencies43(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44>(
        _ value: @escaping (Dependencies44<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>)
    {
        let deps: Dependencies44<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44> = Dependencies44(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45>(
        _ value: @escaping (Dependencies45<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>)
    {
        let deps: Dependencies45<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45> = Dependencies45(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46>(
        _ value: @escaping (Dependencies46<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>)
    {
        let deps: Dependencies46<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46> = Dependencies46(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47>(
        _ value: @escaping (Dependencies47<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>)
    {
        let deps: Dependencies47<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47> = Dependencies47(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48>(
        _ value: @escaping (Dependencies48<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>)
    {
        let deps: Dependencies48<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48> = Dependencies48(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49>(
        _ value: @escaping (Dependencies49<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>)
    {
        let deps: Dependencies49<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49> = Dependencies49(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50>(
        _ value: @escaping (Dependencies50<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>)
    {
        let deps: Dependencies50<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50> = Dependencies50(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51>(
        _ value: @escaping (Dependencies51<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>)
    {
        let deps: Dependencies51<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51> = Dependencies51(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52>(
        _ value: @escaping (Dependencies52<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>)
    {
        let deps: Dependencies52<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52> = Dependencies52(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53>(
        _ value: @escaping (Dependencies53<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>)
    {
        let deps: Dependencies53<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53> = Dependencies53(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54>(
        _ value: @escaping (Dependencies54<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>)
    {
        let deps: Dependencies54<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54> = Dependencies54(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55>(
        _ value: @escaping (Dependencies55<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>)
    {
        let deps: Dependencies55<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55> = Dependencies55(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56>(
        _ value: @escaping (Dependencies56<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>)
    {
        let deps: Dependencies56<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56> = Dependencies56(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57>(
        _ value: @escaping (Dependencies57<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>)
    {
        let deps: Dependencies57<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57> = Dependencies57(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58>(
        _ value: @escaping (Dependencies58<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>)
    {
        let deps: Dependencies58<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58> = Dependencies58(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59>(
        _ value: @escaping (Dependencies59<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>, _ d59: KeyPath<Members, D59>)
    {
        let deps: Dependencies59<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59> = Dependencies59(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60>(
        _ value: @escaping (Dependencies60<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>, _ d59: KeyPath<Members, D59>, _ d60: KeyPath<Members, D60>)
    {
        let deps: Dependencies60<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60> = Dependencies60(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61>(
        _ value: @escaping (Dependencies61<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>, _ d59: KeyPath<Members, D59>, _ d60: KeyPath<Members, D60>, _ d61: KeyPath<Members, D61>)
    {
        let deps: Dependencies61<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61> = Dependencies61(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62>(
        _ value: @escaping (Dependencies62<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>, _ d59: KeyPath<Members, D59>, _ d60: KeyPath<Members, D60>, _ d61: KeyPath<Members, D61>, _ d62: KeyPath<Members, D62>)
    {
        let deps: Dependencies62<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62> = Dependencies62(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
    public func register<U, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62, D63>(
        _ value: @escaping (Dependencies63<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62, D63>) -> U,
        for keypath: KeyPath<Members, U>,
        dependencies d1: KeyPath<Members, D1>, _ d2: KeyPath<Members, D2>, _ d3: KeyPath<Members, D3>, _ d4: KeyPath<Members, D4>, _ d5: KeyPath<Members, D5>, _ d6: KeyPath<Members, D6>, _ d7: KeyPath<Members, D7>, _ d8: KeyPath<Members, D8>, _ d9: KeyPath<Members, D9>, _ d10: KeyPath<Members, D10>, _ d11: KeyPath<Members, D11>, _ d12: KeyPath<Members, D12>, _ d13: KeyPath<Members, D13>, _ d14: KeyPath<Members, D14>, _ d15: KeyPath<Members, D15>, _ d16: KeyPath<Members, D16>, _ d17: KeyPath<Members, D17>, _ d18: KeyPath<Members, D18>, _ d19: KeyPath<Members, D19>, _ d20: KeyPath<Members, D20>, _ d21: KeyPath<Members, D21>, _ d22: KeyPath<Members, D22>, _ d23: KeyPath<Members, D23>, _ d24: KeyPath<Members, D24>, _ d25: KeyPath<Members, D25>, _ d26: KeyPath<Members, D26>, _ d27: KeyPath<Members, D27>, _ d28: KeyPath<Members, D28>, _ d29: KeyPath<Members, D29>, _ d30: KeyPath<Members, D30>, _ d31: KeyPath<Members, D31>, _ d32: KeyPath<Members, D32>, _ d33: KeyPath<Members, D33>, _ d34: KeyPath<Members, D34>, _ d35: KeyPath<Members, D35>, _ d36: KeyPath<Members, D36>, _ d37: KeyPath<Members, D37>, _ d38: KeyPath<Members, D38>, _ d39: KeyPath<Members, D39>, _ d40: KeyPath<Members, D40>, _ d41: KeyPath<Members, D41>, _ d42: KeyPath<Members, D42>, _ d43: KeyPath<Members, D43>, _ d44: KeyPath<Members, D44>, _ d45: KeyPath<Members, D45>, _ d46: KeyPath<Members, D46>, _ d47: KeyPath<Members, D47>, _ d48: KeyPath<Members, D48>, _ d49: KeyPath<Members, D49>, _ d50: KeyPath<Members, D50>, _ d51: KeyPath<Members, D51>, _ d52: KeyPath<Members, D52>, _ d53: KeyPath<Members, D53>, _ d54: KeyPath<Members, D54>, _ d55: KeyPath<Members, D55>, _ d56: KeyPath<Members, D56>, _ d57: KeyPath<Members, D57>, _ d58: KeyPath<Members, D58>, _ d59: KeyPath<Members, D59>, _ d60: KeyPath<Members, D60>, _ d61: KeyPath<Members, D61>, _ d62: KeyPath<Members, D62>, _ d63: KeyPath<Members, D63>)
    {
        let deps: Dependencies63<Members, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, D32, D33, D34, D35, D36, D37, D38, D39, D40, D41, D42, D43, D44, D45, D46, D47, D48, D49, D50, D51, D52, D53, D54, D55, D56, D57, D58, D59, D60, D61, D62, D63> = Dependencies63(storage)
        storage.initializers[keypath] = {
            value(deps)
        }
    }
}
@dynamicMemberLookup
public struct Dependencies1<Members, C1> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies2<Members, C1, C2> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies3<Members, C1, C2, C3> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies4<Members, C1, C2, C3, C4> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies5<Members, C1, C2, C3, C4, C5> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies6<Members, C1, C2, C3, C4, C5, C6> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies7<Members, C1, C2, C3, C4, C5, C6, C7> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies8<Members, C1, C2, C3, C4, C5, C6, C7, C8> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies9<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies10<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies11<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies12<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies13<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies14<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies15<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies16<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies17<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies18<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies19<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies20<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies21<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies22<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies23<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies24<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies25<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies26<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies27<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies28<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies29<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies30<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies31<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies32<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies33<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies34<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies35<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies36<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies37<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies38<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies39<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies40<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies41<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies42<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies43<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies44<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies45<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies46<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies47<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies48<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies49<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies50<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies51<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies52<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies53<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies54<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies55<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies56<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies57<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies58<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies59<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58, C59> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C59?>) -> C59? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies60<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58, C59, C60> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C59?>) -> C59? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C60?>) -> C60? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies61<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58, C59, C60, C61> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C59?>) -> C59? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C60?>) -> C60? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C61?>) -> C61? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies62<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58, C59, C60, C61, C62> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C59?>) -> C59? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C60?>) -> C60? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C61?>) -> C61? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C62?>) -> C62? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
@dynamicMemberLookup
public struct Dependencies63<Members, C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44, C45, C46, C47, C48, C49, C50, C51, C52, C53, C54, C55, C56, C57, C58, C59, C60, C61, C62, C63> {
    private let storage: Belum<Members>.Storage

    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C1?>) -> C1? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C2?>) -> C2? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C3?>) -> C3? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C4?>) -> C4? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C5?>) -> C5? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C6?>) -> C6? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C7?>) -> C7? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C8?>) -> C8? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C9?>) -> C9? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C10?>) -> C10? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C11?>) -> C11? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C12?>) -> C12? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C13?>) -> C13? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C14?>) -> C14? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C15?>) -> C15? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C16?>) -> C16? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C17?>) -> C17? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C18?>) -> C18? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C19?>) -> C19? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C20?>) -> C20? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C21?>) -> C21? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C22?>) -> C22? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C23?>) -> C23? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C24?>) -> C24? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C25?>) -> C25? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C26?>) -> C26? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C27?>) -> C27? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C28?>) -> C28? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C29?>) -> C29? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C30?>) -> C30? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C31?>) -> C31? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C32?>) -> C32? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C33?>) -> C33? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C34?>) -> C34? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C35?>) -> C35? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C36?>) -> C36? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C37?>) -> C37? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C38?>) -> C38? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C39?>) -> C39? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C40?>) -> C40? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C41?>) -> C41? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C42?>) -> C42? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C43?>) -> C43? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C44?>) -> C44? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C45?>) -> C45? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C46?>) -> C46? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C47?>) -> C47? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C48?>) -> C48? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C49?>) -> C49? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C50?>) -> C50? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C51?>) -> C51? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C52?>) -> C52? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C53?>) -> C53? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C54?>) -> C54? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C55?>) -> C55? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C56?>) -> C56? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C57?>) -> C57? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C58?>) -> C58? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C59?>) -> C59? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C60?>) -> C60? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C61?>) -> C61? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C62?>) -> C62? {
        storage[memberKeyPath: keyPath]
    }
    public subscript(dynamicMember keyPath: WritableKeyPath<Members, C63?>) -> C63? {
        storage[memberKeyPath: keyPath]
    }

    fileprivate init(_ storage: Belum<Members>.Storage) { self.storage = storage }
}
